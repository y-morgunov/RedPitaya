#*****************************************************************************************
# Vivado (TM) v2020.1 (64-bit)
#
# red_pitaya_avarage_filter_Z10.tcl: Tcl script for re-creating project 'redpitaya'
#
# Generated by Vivado on Sat Mar 06 13:36:52 +0700 2021
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (red_pitaya_avarage_filter_Z10.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/bd/system/system.bd"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/axi_master.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/axi_wr_fifo.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/divide.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_ams.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_asg.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_asg_ch.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy_rx.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy_test.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy_tx.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_hk.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pid.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pid_block.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_scope.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/axi4_if.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_slave.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/gpio_if.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/red_pitaya_dfilt1.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pdm.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/red_pitaya_pll.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/prj/v0.94/rtl/red_pitaya_ps.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/sys_bus_if.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/sys_bus_interconnect.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/sys_bus_stub.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/prj/v0.94/rtl/red_pitaya_top.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/sys_reg_array_o.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/str_dec.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/str2mm.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/scope_filter.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/scope_dec_avg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/rle.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pwm.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pid_block.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pid.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pdm.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/osc_trg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/osc.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_la_top.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_id.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_asg_top.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_asg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_acq.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/muxctl.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/mgmt.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/lin_mul.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/lin_add.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/lg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/la_trg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/la.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/spi_if.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/axi4_stream_if.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/axi4_lite_if.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/id.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/gen.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/evn_pkg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/debounce.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/cts.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/ctrg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/clkdiv.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/clb.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_scope_Z20.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pwm.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_id.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/bin_and.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_reg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_pas.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_mux.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_dly.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_demux.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_cnt.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_lite_slave.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/asg_per.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/asg_bst.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/asg.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/acq.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/prj/v0.94/rtl/red_pitaya_top_Z20.sv"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/sources_1/bd/system/hdl/system_wrapper.v"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/constrs_1/imports/fpga/sdc/red_pitaya.xdc"
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/project/redpitaya.srcs/constrs_1/imports/fpga/prj/v0.94/sdc/red_pitaya.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    "C:/Users/y.morgunov/workspace/A014-RedPitaya/RedPitaya/fpga/prj/v0.94/rtl/red_pitaya_proc.vhd"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "redpitaya"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "red_pitaya_avarage_filter_Z10.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/prj/v0.94/project"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z010clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/brd"]" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/prj/v0.94/rtl/red_pitaya_proc.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/bd/system/system.bd" ]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/axi_master.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/axi_wr_fifo.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/divide.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_ams.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_asg.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_asg_ch.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy_rx.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy_test.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_daisy_tx.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_hk.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pid.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pid_block.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_scope.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/axi4_if.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_slave.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/gpio_if.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/red_pitaya_dfilt1.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pdm.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/red_pitaya_pll.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/prj/v0.94/rtl/red_pitaya_ps.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/sys_bus_if.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/sys_bus_interconnect.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/sys_bus_stub.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/prj/v0.94/rtl/red_pitaya_top.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/sys_reg_array_o.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/str_dec.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/str2mm.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/scope_filter.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/scope_dec_avg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/rle.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pwm.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pid_block.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pid.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/pdm.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/osc_trg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/osc.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_la_top.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_id.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_asg_top.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_asg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/old_acq.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/muxctl.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/mgmt.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/lin_mul.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/lin_add.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/lg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/la_trg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/la.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/spi_if.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/axi4_stream_if.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/interface/axi4_lite_if.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/id.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/gen.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/evn_pkg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/debounce.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/cts.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/ctrg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/clkdiv.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/clb.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_scope_Z20.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_pwm.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/classic/red_pitaya_id.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/bin_and.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_reg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_pas.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_mux.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_dly.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_demux.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_stream_cnt.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/axi4_lite_slave.v"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/asg_per.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/asg_bst.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/asg.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/rtl/acq.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/imports/fpga/prj/v0.94/rtl/red_pitaya_top_Z20.sv"]\
 [file normalize "${origin_dir}/prj/v0.94/project/redpitaya.srcs/sources_1/bd/system/hdl/system_wrapper.v" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/prj/v0.94/rtl/red_pitaya_proc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
set file "system/system.bd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "interface/axi4_if.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/axi4_slave.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "interface/gpio_if.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/red_pitaya_dfilt1.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "classic/red_pitaya_pdm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/red_pitaya_pll.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/red_pitaya_ps.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "interface/sys_bus_if.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/sys_bus_interconnect.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/sys_bus_stub.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/red_pitaya_top.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/sys_reg_array_o.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/str_dec.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/str2mm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/scope_filter.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/scope_dec_avg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/rle.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/pwm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/pid_block.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/pid.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/pdm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/osc_trg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/osc.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/old_la_top.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/old_id.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/old_asg_top.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/old_asg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/old_acq.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/muxctl.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/mgmt.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/lin_mul.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/lin_add.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/lg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/la_trg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/la.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "interface/spi_if.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "interface/axi4_stream_if.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "interface/axi4_lite_if.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/id.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/gen.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/evn_pkg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/debounce.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/cts.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/ctrg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/clkdiv.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/clb.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "classic/red_pitaya_pwm.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/bin_and.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/axi4_stream_reg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/axi4_stream_pas.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/axi4_stream_mux.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/axi4_stream_dly.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/axi4_stream_demux.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/axi4_stream_cnt.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/asg_per.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/asg_bst.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/asg.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/acq.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "rtl/red_pitaya_top_Z20.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "red_pitaya_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/prj/v0.94/project/redpitaya.srcs/constrs_1/imports/fpga/sdc/red_pitaya.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "sdc/red_pitaya.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/prj/v0.94/project/redpitaya.srcs/constrs_1/imports/fpga/prj/v0.94/sdc/red_pitaya.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "sdc/red_pitaya.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xc7z010clg400-1" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "red_pitaya_top" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z010clg400-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z010clg400-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7z010clg400-1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
